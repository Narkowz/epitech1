#!/usr/bin/python3

from math import *
import sys

if len(sys.argv) != 8:
    sys.exit(84)

a = float(sys.argv[1])
b = float(sys.argv[2])
c = float(sys.argv[3])
d = float(sys.argv[4])
e = float(sys.argv[5])
f = float(sys.argv[6])
n = float(sys.argv[7])

if n < 0:
    sys.exit(84)

def main(a, b , c, d, e, f, n):
    vector_test = [a, b, c]
    final_point = vectored(a, b, c, d, e, f)
    print("The velocity vector of the ball is:")
    print(f'({final_point[0]:.2f}, {final_point[1]:.2f}, {final_point[2]:.2f})')
    final_point = multiple(final_point, n, vector_test)
    print(f"At time t + {n:.0f}, ball coordinates will be:")
    print(f'({final_point[0]:.2f}, {final_point[1]:.2f}, {final_point[2]:.2f})')

def diff(vector_a, vector_b):
    vector_d = [0, 0, 0]
    for i in range(0, 3):
        vector_d[i] = vector_b[i] - vector_a[i]
    return vector_d

def touch(vector_test, vector_test_before, touch_count):
    if (vector_test_before[2] < 0 and vector_test[2] >= 0) or (vector_test_before[2] > 0 and vector_test[2] <= 0):
        touch_count = touch_count + 1
        return touch_count
    else: 
        return 0

def multiple(final_point, multi_calc, vector_test):
    touch_count = 0
    vector_test_before = [0, 0, 0]
    if multi_calc < 0:
        print("Error")
    while multi_calc >= 0:
        for i in range(0, 3):
            vector_test[i] = vector_test[i] + final_point[i]
        multi_calc = multi_calc - 1
        touch_count = touch_count + touch(vector_test, vector_test_before, touch_count)
        vector_test_before[2] = vector_test[2]
    if touch_count == 0:
        print("The ball wonâ€™t reach the paddle.")
    return vector_test

def vectored(a, b, c, d, e, f):
    vector_a = [a, b, c]
    vector_b = [d, e, f]
    velocity_vector = diff(vector_a, vector_b)
    return velocity_vector

if __name__ == '__main__':
    main(a, b, c, d, e, f, n)
